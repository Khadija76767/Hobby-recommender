"""add display name and avatar url

Revision ID: b14285f23c16
Revises: 1a9e28af9723
Create Date: 2025-07-22 20:38:47.786757

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b14285f23c16'
down_revision: Union[str, None] = '1a9e28af9723'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_friendships_id', table_name='friendships')
    op.drop_table('friendships')
    op.drop_table('user_hobby_likes')
    op.drop_index('ix_user_friends_id', table_name='user_friends')
    op.drop_table('user_friends')
    op.drop_index('ix_user_preferences_id', table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index('ix_hobby_progress_id', table_name='hobby_progress')
    op.drop_table('hobby_progress')
    op.drop_column('hobbies', 'vector_embedding')
    op.drop_column('hobbies', 'mood_tags')
    op.alter_column('messages', 'content',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True)
    op.alter_column('messages', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.add_column('users', sa.Column('display_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('avatar_url', sa.String(), nullable=True))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_column('users', 'avatar_url')
    op.drop_column('users', 'display_name')
    op.alter_column('messages', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('messages', 'content',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False)
    op.add_column('hobbies', sa.Column('mood_tags', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('hobbies', sa.Column('vector_embedding', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_table('hobby_progress',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hobby_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_updated', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hobby_id'], ['hobbies.id'], name='hobby_progress_hobby_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='hobby_progress_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='hobby_progress_pkey')
    )
    op.create_index('ix_hobby_progress_id', 'hobby_progress', ['id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('creativity_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('physical_activity_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('social_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('technical_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('outdoor_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('risk_tolerance_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('time_commitment_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cost_tolerance_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('learning_style_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('goal_orientation_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_preferences_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_preferences_pkey')
    )
    op.create_index('ix_user_preferences_id', 'user_preferences', ['id'], unique=False)
    op.create_table('user_friends',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('friend_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], name='user_friends_friend_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_friends_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_friends_pkey')
    )
    op.create_index('ix_user_friends_id', 'user_friends', ['id'], unique=False)
    op.create_table('user_hobby_likes',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hobby_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hobby_id'], ['hobbies.id'], name='user_hobby_likes_hobby_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_hobby_likes_user_id_fkey')
    )
    op.create_table('friendships',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('friend_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], name='friendships_friend_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='friendships_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='friendships_pkey')
    )
    op.create_index('ix_friendships_id', 'friendships', ['id'], unique=False)
    # ### end Alembic commands ### 